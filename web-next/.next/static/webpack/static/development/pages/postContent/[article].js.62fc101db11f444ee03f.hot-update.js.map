{"version":3,"file":"static/webpack/static/development/pages/postContent/[article].js.62fc101db11f444ee03f.hot-update.js","sources":["webpack:///./pages/postContent/[article].js"],"sourcesContent":["import Layout from \"../../components/Layout\"\nimport posts from '../../static/topic.json'\nimport postContent from '../../static/postContent.json'\nimport Link from 'next/link'\n\nconst OtherTopics = (props) => {\n    // filter from posts to get all the postName that is not the same as our current article's postName\n    const otherTopics = posts.filter(post => post.postName != props.currArticle.postName);\n    return (\n        <div>\n            {\n                otherTopics.map(topic => (\n                    <div className=\"timelineContainer pt-5\" key={topic.id}>\n                        <Link href=\"/posts/[postName]\" as={`/posts/${topic.postName}`}> \n                            <a><img className=\"img-fluid\" src={`../../static/assets/template/images/${topic.image}`}/>\n                                <p className=\"textBelow colorWhite fontSize1vw\">{topic.name}</p>\n                            </a>\n                        </Link>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nconst CurrArticleContent = (props) => {\n    const relatedArticles = props.currTopic.filter(post => post.id != props.currArticle.id)\n    return (\n        <div>\n            <div>\n                {/* <!-- illustration image --> */}\n                <h3 className=\"colorDarkBlue fontRoboBold fontSize1-5vw pt-3\">{props.currArticle.name}</h3>\n                <img className=\"img-fluid borderRect\" src={`../../static/assets/template/${props.currArticle.image}`}/>\n                {/* <!-- short excerpt of the article--> */}\n                <p className=\"fontRoboLight fontSize1-2vw text-justify\">{props.currArticle.content}</p>\n                <p className=\"fontRoboBold fontSize1vw text-right\">PGS.TS.BS. Phạm Thị Bích Đào</p>    \n            </div>\n\n            {/* <!-- other articles with title and short excerpt at the sides--> */}\n            <hr/>\n            <h3 className=\"fontSize1-5vw mt-5\">CÁC BÀI VIẾT LIÊN QUAN</h3>\n            <div className=\"container text-left py-3\">\n                {relatedArticles.map(article => {\n                    <a href=\"#\"><h4 className=\"colorDarkBlue fontSize1-2vw align-left\">{article.name}</h4></a>\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst PostContent = (props) => {\n    // we have the web name here\n    const currArticleWebName = props.currArticleWebName;\n    console.log(currArticleWebName)\n    // we get the aritcle name to display here\n    const currArticle = postContent.filter(post => post.articleName == currArticleWebName)\n    console.log(currArticle)\n   \n    const currTopic = postContent.filter(post => post.postName == currArticle[0].postName)\n    //console.log(currTopic)\n\n    // how do I get the name of this post name?\n    return (\n        <Layout>\n            <a href=\"#\"><h3 className=\"colorDarkBlue fontSansation fontSize1-5vw pl-5 ml-5\">Trang chính BÀI VIẾT VỀ HÔ HẤP</h3></a>\n            <div className=\"container-fluid m-4\">\n                <div className=\"row\">            \n                    <div className=\"col-md-1\">\n                    </div>\n                    <div className=\"col-md-6 py-2\">\n                        \n                        {/* <!-- latest article will be put in front with big image --> */}\n                        <CurrArticleContent currArticle={currArticle[0]} currTopic={currTopic}/>\n                    </div>\n                    {/* <!-- for other topics --> */}\n                    <div className=\"col-md-4 vl-short colScroll\">\n                        <OtherTopics currArticle={currArticle}/>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nPostContent.getInitialProps = ({query}) => {\n    return {\n        currArticleWebName: query.article\n    };\n}\n\nexport default PostContent;"],"mappingssourceRoot":""}