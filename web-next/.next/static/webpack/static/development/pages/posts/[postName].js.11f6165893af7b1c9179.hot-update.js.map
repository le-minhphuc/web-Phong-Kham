{"version":3,"file":"static/webpack/static/development/pages/posts/[postName].js.11f6165893af7b1c9179.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./pages/posts/[postName].js"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import Layout from \"../../components/Layout\"\nimport { useRouter } from 'next/router'\nimport posts from '../../static/topic.json'\nimport postContent from '../../static/postContent.json'\nimport Link from 'next/link'\n\nconst OtherTopics = (props) => {\n    const otherTopics = props.posts.filter(post => post.postName != props.currPostName);\n    return (\n        <div>\n            {\n                otherTopics.map(topic => (\n                    <div className=\"timelineContainer pt-5\">\n                        <Link href=\"/posts/[postName]\" as={`/posts/${topic.postName}`}> \n                            <a><img className=\"img-fluid\" src=\"../../static/assets/template/images/t1-sm.png\"/>\n                                <p className=\"textBelow colorWhite fontSize1vw\">{topic.name}</p>\n                            </a>\n                        </Link>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nclass MainTopicArticle extends React.Component{} (props) => {\n    // filter out the 1st article\n    const otherArticles = props.currTopicPost.filter(article => article.id != props.currTopicPost[0].id);\n    return (\n        <div>\n            <div>\n                {/* <!-- illustration image --> */}\n                <img className=\"img-fluid borderRect\" src={props.currTopicPost[0].image}/>\n                <a href=\"#\">\n                    <h3 className=\"colorDarkBlue fontRoboBold fontSize1-5vw pt-3\">\n                        {props.currTopicPost[0].name}\n                    </h3>\n                </a>\n                {/* <!-- short excerpt of the article--> */}\n                <p className=\"fontRoboLight fontSize1-2vw\">\n                    {props.currTopicPost[0].excerpt}\n                </p>\n            </div>\n            <hr/>\n            {\n                otherArticles.map(article => (\n                    <div>\n                        <div className=\"row pt-4\">\n                            <div className=\"col-md-3\">\n                                <img className=\"img-fluid\" src={article.image}/>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <a href=\"#\"><h4 className=\"colorDarkBlue fontSize1-5vw fontRoboBold\">{article.name}</h4></a>\n                                <p className=\"fontSize1-2vw fontRoboLight\">{article.excerpt}</p>\n                            </div>\n                        </div>\n                        <hr/>\n                    </div>    \n                ))\n            }\n        </div>\n    )\n}\n\nconst Post = () => {\n    const router = useRouter();\n    const currPostName = router.query.postName;\n    const currName = posts.filter(post => post.postName == currPostName);\n\n    // how do I get the name of this post name?\n    return (\n        <Layout>\n            <h3 className=\"colorDarkBlue fontSansation fontSize1-5vw pl-5 ml-5\">{currName.name}</h3>\n            <div className=\"container-fluid m-4\">\n                <div className=\"row\">            \n                    <div className=\"col-md-1\">\n                    </div>\n                    <div className=\"col-md-6 py-2\">\n                        <MainTopicArticle\n                            currTopicPost={postContent\n                                .filter(article => article.postName == currPostName)}\n                        /> \n                    </div>\n                    {/* <!-- for other topics --> */}\n                    <div className=\"col-md-4 vl colScroll\">\n                        <div className=\"timelineContainer\">\n                            <h3 className=\"fontSize1-5vw\">CÁC CHỦ ĐỀ BÀI VIẾT</h3>\n                        </div>\n                        <OtherTopics posts={posts} currPostName={currPostName}/>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n}\nexport default Post;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAYA;AACA;AACA;;;;;;;;;;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}