{"ast":null,"code":"var _jsxFileName = \"/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var href = _ref.href,\n      children = _ref.children;\n  var router = useRouter();\n  var className = children.props.className || '';\n\n  if (router.pathname === href) {\n    className = \"\".concat(className, \" selected\");\n  }\n\n  ;\n  return __jsx(Link, {\n    href: href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.clon);\n}; // import { withRouter } from 'next/router';\n// import Link from 'next/link';\n// import React, { Children } from 'react';\n// const ActiveLink = ({ router, children, ...props}) => {\n//     const child=Children.only(children);\n//     let className=child.props.className || '';\n//     if (router.pathname === props.href && props.activeClassName) {\n//         className=`{className}${props.activeClassName}`.trim();\n//     }\n//     delete props.activeClassName;\n//     return (\n//         <Link{...props}>{React.cloneElement(child, { className })}\n//         </Link>\n//     );\n// }\n// export default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js"],"names":["React","Link","useRouter","ActiveLink","href","children","router","className","props","pathname","clon"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAIK,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAID,MAAM,CAACG,QAAP,KAAoBL,IAAxB,EAA8B;AAC1BG,IAAAA,SAAS,aAAMA,SAAN,cAAT;AACH;;AAAA;AAEL,SAAO,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBJ,KAAK,CAACU,IAAzB,CAAP;AACC,CATD,C,CAaA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst ActiveLink = ( {href, children }) => {\n    const router = useRouter();\n    \n    let className = children.props.className || '';\n    if (router.pathname === href) {\n        className = `${className} selected`\n    };\n\nreturn <Link href={href}>{React.clon}</Link>\n}\n\n\n\n// import { withRouter } from 'next/router';\n// import Link from 'next/link';\n// import React, { Children } from 'react';\n\n// const ActiveLink = ({ router, children, ...props}) => {\n//     const child=Children.only(children);\n\n//     let className=child.props.className || '';\n//     if (router.pathname === props.href && props.activeClassName) {\n//         className=`{className}${props.activeClassName}`.trim();\n//     }\n\n//     delete props.activeClassName;\n\n//     return (\n//         <Link{...props}>{React.cloneElement(child, { className })}\n//         </Link>\n//     );\n    \n// }\n\n// export default withRouter(ActiveLink);"]},"metadata":{},"sourceType":"module"}