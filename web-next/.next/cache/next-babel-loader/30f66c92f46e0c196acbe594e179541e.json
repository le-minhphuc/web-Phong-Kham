{"ast":null,"code":"var _jsxFileName = \"/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\n\nconst ActiveLink = (_ref) => {\n  let {\n    router,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  const child = Children.only(children);\n  let className = child.props.className || ''; // we determine if the current path name matches the href prop of the component, and if so we append the \"active\" class to the children ( we get the class \"active\" from props.activeClassName)\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = `${className !== null ? className : ''} ${props.activeClassName}`.trim();\n  }\n\n  ;\n  delete props.activeClassName;\n  return __jsx(Link, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.cloneElement(child, {\n    className\n  }));\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js"],"names":["React","Children","Link","withRouter","ActiveLink","router","children","props","child","only","className","pathname","href","activeClassName","trim","cloneElement"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,UAAU,GAAG,UAAqC;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AAAA,MAAZC,KAAY;;AACpD,QAAMC,KAAK,GAAGP,QAAQ,CAACQ,IAAT,CAAcH,QAAd,CAAd;AAEA,MAAII,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC,CAHoD,CAIpD;;AACA,MAAIL,MAAM,CAACM,QAAP,KAAoBJ,KAAK,CAACK,IAA1B,IAAkCL,KAAK,CAACM,eAA5C,EAA6D;AACzDH,IAAAA,SAAS,GAAI,GAAEA,SAAS,KAAK,IAAd,GAAqBA,SAArB,GAAgC,EAAG,IAAGH,KAAK,CAACM,eAAgB,EAA/D,CAAiEC,IAAjE,EAAZ;AACH;;AAAA;AAED,SAAOP,KAAK,CAACM,eAAb;AAEJ,SAAQ,MAAC,IAAD,eAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBP,KAAK,CAACe,YAAN,CAAmBP,KAAnB,EAA0B;AAACE,IAAAA;AAAD,GAA1B,CAAlB,CAAR;AACC,CAZD;;AAcA,eAAeP,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React, { Children } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\n\nconst ActiveLink = ( { router, children, ...props }) => {\n    const child = Children.only(children);\n    \n    let className = child.props.className || '';\n    // we determine if the current path name matches the href prop of the component, and if so we append the \"active\" class to the children ( we get the class \"active\" from props.activeClassName)\n    if (router.pathname === props.href && props.activeClassName) {\n        className = `${className !== null ? className: ''} ${props.activeClassName}`.trim()\n    };\n\n    delete props.activeClassName;\n\nreturn (<Link {...props}>{React.cloneElement(child, {className})}</Link>);\n};\n\nexport default withRouter(ActiveLink);\n"]},"metadata":{},"sourceType":"module"}