{"ast":null,"code":"// import { withRouter } from 'next/router';\n// import Link from 'next/link';\n// import React, { Children } from 'react';\n// const ActiveLink = ({ router, children, ...props}) => {\n//     const child=Children.only(children);\n//     let className=child.props.className || '';\n//     if (router.pathname === props.href && props.activeClassName) {\n//         className=`{className}${props.activeClassName}`.trim();\n//     }\n//     delete props.activeClassName;\n//     return (\n//         <Link{...props}>{React.cloneElement(child, { className })}\n//         </Link>\n//     );\n// }\n// export default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { withRouter } from 'next/router';\n// import Link from 'next/link';\n// import React, { Children } from 'react';\n\n// const ActiveLink = ({ router, children, ...props}) => {\n//     const child=Children.only(children);\n\n//     let className=child.props.className || '';\n//     if (router.pathname === props.href && props.activeClassName) {\n//         className=`{className}${props.activeClassName}`.trim();\n//     }\n\n//     delete props.activeClassName;\n\n//     return (\n//         <Link{...props}>{React.cloneElement(child, { className })}\n//         </Link>\n//     );\n    \n// }\n\n// export default withRouter(ActiveLink);"]},"metadata":{},"sourceType":"script"}