{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js\";\nvar __jsx = React.createElement;\nimport React, { Children } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var router = _ref.router,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  var child = Children.only(children);\n  var className = child.props.className || ''; // we determine if the current path name matches the href prop of the component, and if so we append the \"active\" class to the children.\n\n  if (router.pathname === props.href) {\n    className = \"\".concat(className !== null ? className : '').concat(props.activeClassName).trim();\n  }\n\n  ;\n  delete props.activeClassName;\n  return __jsx(Link, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.cloneElement(child, {\n    className: className\n  }));\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/becondethuong321/Documents/web-Phong-Kham/web-next/components/ActiveLink.js"],"names":["React","Children","Link","withRouter","ActiveLink","router","children","props","child","only","className","pathname","href","activeClassName","trim","cloneElement"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAqC;AAAA,MAAjCC,MAAiC,QAAjCA,MAAiC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACpD,MAAMC,KAAK,GAAGP,QAAQ,CAACQ,IAAT,CAAcH,QAAd,CAAd;AAEA,MAAII,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC,CAHoD,CAIpD;;AACA,MAAIL,MAAM,CAACM,QAAP,KAAoBJ,KAAK,CAACK,IAA9B,EAAoC;AAChCF,IAAAA,SAAS,GAAG,UAAGA,SAAS,KAAK,IAAd,GAAqBA,SAArB,GAAgC,EAAnC,SAAwCH,KAAK,CAACM,eAA9C,EAAgEC,IAAhE,EAAZ;AACH;;AAAA;AAED,SAAOP,KAAK,CAACM,eAAb;AAEJ,SAAQ,MAAC,IAAD,eAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBP,KAAK,CAACe,YAAN,CAAmBP,KAAnB,EAA0B;AAACE,IAAAA,SAAS,EAATA;AAAD,GAA1B,CAAlB,CAAR;AACC,CAZD;;AAcA,eAAeP,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React, { Children } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\n\nconst ActiveLink = ( { router, children, ...props }) => {\n    const child = Children.only(children);\n    \n    let className = child.props.className || '';\n    // we determine if the current path name matches the href prop of the component, and if so we append the \"active\" class to the children.\n    if (router.pathname === props.href) {\n        className = `${className !== null ? className: ''}${props.activeClassName}`.trim()\n    };\n\n    delete props.activeClassName;\n\nreturn (<Link {...props}>{React.cloneElement(child, {className})}</Link>);\n};\n\nexport default withRouter(ActiveLink);\n"]},"metadata":{},"sourceType":"module"}