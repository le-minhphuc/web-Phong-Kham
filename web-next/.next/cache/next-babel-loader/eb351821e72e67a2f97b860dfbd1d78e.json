{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport posts from '../../static/topic.json';\nimport postContent from '../../static/postContent.json';\nimport Link from 'next/link';\n\nconst OtherTopics = props => {\n  // filter from posts to get all the postName that is not the same as our current article's postName\n  const otherTopics = posts.filter(post => post.postName != props.currArticle.postName);\n  return __jsx(\"div\", {\n    className: \"col-md-4 vl-short colScroll\"\n  }, __jsx(\"h3\", {\n    className: \"fontSize1-5vw fontSansation pt-3 text-center\"\n  }, \"C\\xC1C CH\\u1EE6 \\u0110\\u1EC0 B\\xC0I VI\\u1EBET KH\\xC1C\"), otherTopics.map(topic => __jsx(\"div\", {\n    className: \"timelineContainer pt-5\",\n    key: topic.id\n  }, __jsx(Link, {\n    href: \"/posts/[postName]\",\n    as: `/posts/${topic.postName}`\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    className: \"img-fluid\",\n    src: `../../static/assets/template/images/${topic.image}`\n  }), __jsx(\"p\", {\n    className: \"textBelow colorWhite fontSize1vw\"\n  }, topic.name))))));\n};\n\nconst CurrArticleContent = props => {\n  const relatedArticles = props.relatedArticles.slice(0, 4);\n  const paragraphs = props.currArticle.content.split(\"\\n\");\n  return __jsx(\"div\", {\n    className: \"col-md-6 py-2\"\n  }, __jsx(\"div\", null, __jsx(\"h3\", {\n    className: \"colorDarkBlue fontRoboBold fontSize1-5vw pt-3\"\n  }, props.currArticle.name), __jsx(\"img\", {\n    className: \"img-fluid borderRect mb-5\",\n    src: `../../static/assets/template/images/${props.currArticle.image}`\n  }), paragraphs.map(paragraph => __jsx(\"p\", {\n    className: \"fontRoboLight fontSize1-2vw text-justify\"\n  }, paragraph)), __jsx(\"p\", {\n    className: \"fontRoboBold fontSize1vw text-right\"\n  }, \"PGS.TS.BS. Ph\\u1EA1m Th\\u1ECB B\\xEDch \\u0110\\xE0o\")), __jsx(\"hr\", null), __jsx(\"h3\", {\n    className: \"fontSize1-5vw mt-5\"\n  }, \"C\\xC1C B\\xC0I VI\\u1EBET LI\\xCAN QUAN\"), __jsx(\"div\", {\n    className: \"container text-left\"\n  }, relatedArticles.map(article => __jsx(Link, {\n    href: \"/postContent/[article]\",\n    as: `/postContent/${article.articleName}`,\n    key: article.id\n  }, __jsx(\"a\", null, __jsx(\"h4\", {\n    className: \"colorDarkBlue fontSize1-2vw align-left fontRoboLight\"\n  }, article.name))))));\n};\n\nconst PostContent = props => {\n  // we have the web name here\n  const currArticleWebName = props.currArticleWebName; //console.log(currArticleWebName)\n  // we get the aritcle name to display here\n\n  const currArticle = postContent.filter(post => post.articleName == currArticleWebName); //console.log(currArticle)\n\n  const currTopic = posts.filter(topic => topic.postName == currArticle[0].postName); //console.log(currTopic)\n\n  const relatedArticles = postContent.filter(post => post.postName == currArticle[0].postName).filter(post => post.id != currArticle[0].id); //console.log(relatedArticles)\n  //console.log(currTopic)\n  // how do I get the name of this post name?\n\n  return __jsx(Layout, {\n    title: currArticle[0].name\n  }, __jsx(Link, {\n    href: \"/posts/[postName]\",\n    as: `/posts/${currTopic[0].postName}`\n  }, __jsx(\"a\", null, __jsx(\"h3\", {\n    className: \"colorDarkBlue fontSansation fontSize1-5vw pl-5 ml-5 pt-3\"\n  }, \"Trang ch\\xEDnh \", currTopic[0].name))), __jsx(\"div\", {\n    className: \"container-fluid m-3\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-1\"\n  }), __jsx(CurrArticleContent, {\n    currArticle: currArticle[0],\n    relatedArticles: relatedArticles\n  }), __jsx(OtherTopics, {\n    currArticle: currArticle[0]\n  }))));\n};\n\nPostContent.getInitialProps = ({\n  query\n}) => {\n  return {\n    currArticleWebName: query.article\n  };\n};\n\nexport default PostContent;","map":{"version":3,"sources":["/Users/becondethuong321/Documents/web-Phong-Kham/web-next/pages/postContent/[article].js"],"names":["Layout","posts","postContent","Link","OtherTopics","props","otherTopics","filter","post","postName","currArticle","map","topic","id","image","name","CurrArticleContent","relatedArticles","slice","paragraphs","content","split","paragraph","article","articleName","PostContent","currArticleWebName","currTopic","getInitialProps","query"],"mappings":"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","sourcesContent":["import Layout from \"../../components/Layout\"\nimport posts from '../../static/topic.json'\nimport postContent from '../../static/postContent.json'\nimport Link from 'next/link'\n\nconst OtherTopics = (props) => {\n    // filter from posts to get all the postName that is not the same as our current article's postName\n    const otherTopics = posts.filter(post => post.postName != props.currArticle.postName);\n    return (\n        <div className=\"col-md-4 vl-short colScroll\">\n            <h3 className=\"fontSize1-5vw fontSansation pt-3 text-center\">CÁC CHỦ ĐỀ BÀI VIẾT KHÁC</h3>\n            {\n                otherTopics.map(topic => (\n                    <div className=\"timelineContainer pt-5\" key={topic.id}>\n                        <Link href=\"/posts/[postName]\" as={`/posts/${topic.postName}`}> \n                            <a><img className=\"img-fluid\" src={`../../static/assets/template/images/${topic.image}`}/>\n                                <p className=\"textBelow colorWhite fontSize1vw\">{topic.name}</p>\n                            </a>\n                        </Link>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nconst CurrArticleContent = (props) => {\n    const relatedArticles = props.relatedArticles.slice(0,4);\n    const paragraphs = props.currArticle.content.split(\"\\n\");\n    return (\n        <div className=\"col-md-6 py-2\">\n            <div>\n                {/* <!-- illustration image --> */}\n                <h3 className=\"colorDarkBlue fontRoboBold fontSize1-5vw pt-3\">{props.currArticle.name}</h3>\n                <img className=\"img-fluid borderRect mb-5\" src={`../../static/assets/template/images/${props.currArticle.image}`}/>\n                {/* <!-- short excerpt of the article--> */}\n                { paragraphs.map( paragraph => (\n                    <p className=\"fontRoboLight fontSize1-2vw text-justify\">{paragraph}</p>\n                ))}\n                <p className=\"fontRoboBold fontSize1vw text-right\">PGS.TS.BS. Phạm Thị Bích Đào</p>    \n            </div>\n\n            {/* <!-- other articles with title and short excerpt at the sides--> */}\n            <hr/>\n            <h3 className=\"fontSize1-5vw mt-5\">CÁC BÀI VIẾT LIÊN QUAN</h3>\n            <div className=\"container text-left\">\n                {\n                    relatedArticles.map(article => (\n                        <Link href=\"/postContent/[article]\" as={`/postContent/${article.articleName}`} key={article.id}>\n                            <a><h4 className=\"colorDarkBlue fontSize1-2vw align-left fontRoboLight\">{article.name}</h4></a>\n                        </Link>   \n                        )\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nconst PostContent = (props) => {\n    // we have the web name here\n    const currArticleWebName = props.currArticleWebName;\n    //console.log(currArticleWebName)\n    // we get the aritcle name to display here\n    const currArticle = postContent.filter(post => post.articleName == currArticleWebName)\n    //console.log(currArticle)\n\n    const currTopic = posts.filter(topic => topic.postName == currArticle[0].postName)\n    //console.log(currTopic)\n\n    const relatedArticles = postContent.filter(post => post.postName == currArticle[0].postName).filter(post => post.id != currArticle[0].id)\n    //console.log(relatedArticles)\n    //console.log(currTopic)\n\n    // how do I get the name of this post name?\n    return (\n        <Layout title={currArticle[0].name}>\n            <Link href=\"/posts/[postName]\" as={`/posts/${currTopic[0].postName}`}>\n                <a><h3 className=\"colorDarkBlue fontSansation fontSize1-5vw pl-5 ml-5 pt-3\">Trang chính {currTopic[0].name}</h3></a>\n            </Link>\n            <div className=\"container-fluid m-3\">\n                <div className=\"row\">            \n                    <div className=\"col-md-1\">\n                    </div>\n                    {/* CurrArticleContent has className=\"col-md-6\" */}\n                    <CurrArticleContent currArticle={currArticle[0]} relatedArticles={relatedArticles}/>\n                    {/* <!-- for other topics --> */}\n                    {/* OtherTopics has className=\"col-md-4\" */}\n                    <OtherTopics currArticle={currArticle[0]}/>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nPostContent.getInitialProps = ({query}) => {\n    return {\n        currArticleWebName: query.article\n    };\n}\n\nexport default PostContent;"]},"metadata":{},"sourceType":"module"}